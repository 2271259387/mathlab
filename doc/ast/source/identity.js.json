{
  "type": "Program",
  "body": [
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "diag",
            "range": [
              7,
              11
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 7
              },
              "end": {
                "line": 1,
                "column": 11
              }
            }
          },
          "range": [
            7,
            11
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 1,
              "column": 11
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./diag",
        "raw": "'./diag'",
        "range": [
          17,
          25
        ],
        "loc": {
          "start": {
            "line": 1,
            "column": 17
          },
          "end": {
            "line": 1,
            "column": 25
          }
        }
      },
      "range": [
        0,
        26
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": "ImportDeclaration",
      "specifiers": [
        {
          "type": "ImportDefaultSpecifier",
          "local": {
            "type": "Identifier",
            "name": "rep",
            "range": [
              34,
              37
            ],
            "loc": {
              "start": {
                "line": 2,
                "column": 7
              },
              "end": {
                "line": 2,
                "column": 10
              }
            }
          },
          "range": [
            34,
            37
          ],
          "loc": {
            "start": {
              "line": 2,
              "column": 7
            },
            "end": {
              "line": 2,
              "column": 10
            }
          }
        }
      ],
      "source": {
        "type": "Literal",
        "value": "./rep",
        "raw": "'./rep'",
        "range": [
          43,
          50
        ],
        "loc": {
          "start": {
            "line": 2,
            "column": 16
          },
          "end": {
            "line": 2,
            "column": 23
          }
        }
      },
      "range": [
        27,
        51
      ],
      "loc": {
        "start": {
          "line": 2,
          "column": 0
        },
        "end": {
          "line": 2,
          "column": 24
        }
      },
      "trailingComments": [
        {
          "type": "Block",
          "value": "*\n * Generate identity matrix of given size\n * \n * @param {Number} n\n * @returns {Array}\n * @example \n * \n * identity(2)\n * // [[1, 0], [0, 1]]\n ",
          "range": [
            53,
            202
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    },
    {
      "type": "ExportDefaultDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "identity",
          "range": [
            227,
            235
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 24
            },
            "end": {
              "line": 14,
              "column": 32
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "n",
            "range": [
              237,
              238
            ],
            "loc": {
              "start": {
                "line": 14,
                "column": 34
              },
              "end": {
                "line": 14,
                "column": 35
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "CallExpression",
                "callee": {
                  "type": "Identifier",
                  "name": "diag",
                  "range": [
                    252,
                    256
                  ],
                  "loc": {
                    "start": {
                      "line": 15,
                      "column": 9
                    },
                    "end": {
                      "line": 15,
                      "column": 13
                    }
                  }
                },
                "arguments": [
                  {
                    "type": "CallExpression",
                    "callee": {
                      "type": "Identifier",
                      "name": "rep",
                      "range": [
                        257,
                        260
                      ],
                      "loc": {
                        "start": {
                          "line": 15,
                          "column": 14
                        },
                        "end": {
                          "line": 15,
                          "column": 17
                        }
                      }
                    },
                    "arguments": [
                      {
                        "type": "ArrayExpression",
                        "elements": [
                          {
                            "type": "Identifier",
                            "name": "n",
                            "range": [
                              262,
                              263
                            ],
                            "loc": {
                              "start": {
                                "line": 15,
                                "column": 19
                              },
                              "end": {
                                "line": 15,
                                "column": 20
                              }
                            }
                          }
                        ],
                        "range": [
                          261,
                          264
                        ],
                        "loc": {
                          "start": {
                            "line": 15,
                            "column": 18
                          },
                          "end": {
                            "line": 15,
                            "column": 21
                          }
                        }
                      },
                      {
                        "type": "Literal",
                        "value": 1,
                        "raw": "1",
                        "range": [
                          266,
                          267
                        ],
                        "loc": {
                          "start": {
                            "line": 15,
                            "column": 23
                          },
                          "end": {
                            "line": 15,
                            "column": 24
                          }
                        }
                      }
                    ],
                    "range": [
                      257,
                      268
                    ],
                    "loc": {
                      "start": {
                        "line": 15,
                        "column": 14
                      },
                      "end": {
                        "line": 15,
                        "column": 25
                      }
                    }
                  }
                ],
                "range": [
                  252,
                  269
                ],
                "loc": {
                  "start": {
                    "line": 15,
                    "column": 9
                  },
                  "end": {
                    "line": 15,
                    "column": 26
                  }
                }
              },
              "range": [
                245,
                270
              ],
              "loc": {
                "start": {
                  "line": 15,
                  "column": 2
                },
                "end": {
                  "line": 15,
                  "column": 27
                }
              }
            }
          ],
          "range": [
            240,
            273
          ],
          "loc": {
            "start": {
              "line": 14,
              "column": 37
            },
            "end": {
              "line": 16,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          218,
          273
        ],
        "loc": {
          "start": {
            "line": 14,
            "column": 15
          },
          "end": {
            "line": 16,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Generate identity matrix of given size\n * \n * @param {Number} n\n * @returns {Array}\n * @example \n * \n * identity(2)\n * // [[1, 0], [0, 1]]\n ",
            "range": [
              53,
              202
            ],
            "loc": {
              "start": {
                "line": 4,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "range": [
        203,
        273
      ],
      "loc": {
        "start": {
          "line": 14,
          "column": 0
        },
        "end": {
          "line": 16,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Generate identity matrix of given size\n * \n * @param {Number} n\n * @returns {Array}\n * @example \n * \n * identity(2)\n * // [[1, 0], [0, 1]]\n ",
          "range": [
            53,
            202
          ],
          "loc": {
            "start": {
              "line": 4,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    0,
    273
  ],
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 16,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Generate identity matrix of given size\n * \n * @param {Number} n\n * @returns {Array}\n * @example \n * \n * identity(2)\n * // [[1, 0], [0, 1]]\n ",
      "range": [
        53,
        202
      ],
      "loc": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    }
  ]
}